@startuml Tryp

class Passenger <<Entity>>{
    +id:String
    +name:String
    +surname:String
    +email:String
    +phone:Number
    +profilePicture:String
    +ratingHistory:Number[]
    +rating:Number
    +currentTrip:Trip
    +upcomingTrips:Trip[]
    +tripHistroy:Trip[]
    +cards:Card[]

    +bookTrip(Trip)
    +cancelTrip(Trip)
    +updateProfilePicture(String)
    +addCard(Card)
    +rateDriver(Driver)
    +printTripHistory()
    +printUpcomingTrips()
    +printCurrentTrip()

}

class Driver <<Entity>>{
    +id:String
    +name:String
    +surname:String
    +email:String
    +phone:Number
    +profilePicture:String
    +drivingLicense:String
    +ratingHistory:Number[]
    +rating:Number
    +currentTrip:Trip
    +upcomingTrips:Trip[]
    +tripHistory:Trip[]
    +vehicles:Vehicle[]

    +addVehicle(Vehicle)
    +removeVehicle(Vehicle)
    +createTrip(Trip)
    +editTrip(Trip)
    +cancelTrip(Trip)
    +ratePassenger(Passenger)
    +startTrip(Trip)
    +completeTrip()
    +printTripHistory()
    +printUpcomingTrips()
    +printCurrentTrip()
}

class Vehicle <<Value Object>>{
    +id:String
    +brand:String
    +model:String
    +year:Number
    +availableSeat:Number
    +availableSeat:Number
}

class Car <<Value Object>>{

}

class Motorcycle <<Value Object>>{

}

class Van <<Value Object>>{

}


class Trip <<Entity>>{
    +id:String
    +driver:Driver
    +vehicle:Vehicle
    +passengers:Passenger[]
    +createdAt:Date
    +tripDate:Date
    +from:String
    +destination:String
    +price:Number
    +status:TripStatus

    +print()
}



enum TripStatus{
    +AVAILABLE
    +BOOKED
    +IN_PROGRESS
    +FINISHED
    +CANCELLED
}



class Card <<Value Object>>{
    +name:String
    +cardNumber:Number
    +expirationMonth:Number
    +expirationYear:Number
    +cvv:Number
    +type:CardType
}

enum CardType{
    +CREDIT_CARD
    +DEBIT_CARD
    +GIFT_CARD
}

Driver "1" *-- "many" Vehicle

Passenger "1" *-- "many" Card


Car -up-|> Vehicle
Van -up-|> Vehicle
Motorcycle -up-|> Vehicle

@enduml